# This is a basic workflow to help you get started with Actions

name: Publish nuget

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NUGETSOURCE: "https://api.nuget.org"
  VERSION: 1.0.1
  PROJECTPATH: AutoCode/AutoCode.csproj

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Restore dependecies
        run: dotnet restore
        
      - name: Build
        run: dotnet build -c Release

      - name: Test
        run: dotnet test

      - name: Publish AutoCode Alpha to Nuget.Org
        if: success() && github.ref != 'refs/heads/master'
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: ${{ env.PROJECTPATH }}
          NUGET_KEY: ${{ secrets.NUGETAPIKEY }}
          NUGET_SOURCE: ${{ env.NUGETSOURCE }}
          VERSION_STATIC: ${{ env.VERSION }}-${{ github.run_number }}
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          INCLUDE_SYMBOLS: true

      - name: Publish AutoCode to Nuget.Org
        if: success() && github.ref == 'refs/heads/master'
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: ${{ env.PROJECTPATH }}
          NUGET_KEY: ${{ secrets.NUGETAPIKEY }}
          NUGET_SOURCE: ${{ env.NUGETSOURCE }}
          VERSION_STATIC: ${{ env.VERSION }}
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          INCLUDE_SYMBOLS: true